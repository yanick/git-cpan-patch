SYNOPSIS

        # import a module:
    
        % git-cpan clone Foo::Bar
        % cd Foo-Bar
    
        # hack and submit to RT
    
        # it's probably best to work in a branch
        % git checkout -b blah
    
        ... hack lib/Foo/Bar.pm ...
    
        % git commit -am "blah"
        % git-cpan sendpatch 
    
        # update the module
        # this automatically rebases the current branch
        % git-cpan update

DESCRIPTION

    Git::CPAN::Patch provides a suite of git commands aimed at making
    trivially easy the process of grabbing any distribution off CPAN,
    stuffing it in a local git repository and, once gleeful hacking has
    been perpetrated, sending back patches to its maintainer.

    NOTE: This module is supported in Linux, BSD, and the like. This 
    module is *not* supported in Microsoft Windows (Cygwin, Strawberry Perl). 
    See CPAN Testers Matrix for currently supported operating systems.

GIT-CPAN COMMANDS

    clone

      Clone a CPAN module's history into a new git repository

    import

      Import a module into a git repository.

    send-email

      Use git-send-email to submit patches to CPAN RT

    send-patch

      Create patch files and submit then to RT

    update

      Import the latest version of a module and rebase the current branch

    format-patch

      Format patches using cpan/master as the origin reference

    squash

      Combine multiple commits into one patch

    which

      Report upon the managed module

AUTHORS

    Yanick Champoux <yanick@cpan.org>

    Yuval Kogman <nothingmuch@woobling.org>

SEE ALSO

 Articles

    The set of scripts that would eventually become Git::CPAN::Patch were
    first presented in the article CPAN Patching with Git, published in
    issue 5.1 of The Perl Review <http://theperlreview.com>.

